SHELL := /bin/bash
BOOST_ROOT_VERSION=83
boost.root=$(boost.root.1_$(BOOST_ROOT_VERSION)_0)
#MAIN=coliru_sehe-b4de81a919bec94a
MAIN=coliru_sehe
#MAIN=coliru_sehe-rule_definition
MAIN=coliru_sehe-debug-simple
MAIN=coliru_sehe-debug-simple-compare
#MAIN=coliru_sehe-debug-simple-rule_defn
#MAIN=coliru_sehe-debug
#MAIN=coliru_sehe-debug-simple-rule_defn-1rule
include $(HOME)/prog_dev/root.imk
AVOID_HASH_HPP_WARNS.gxx10_2_0=
AVOID_HASH_HPP_WARNS.clangxx14_0_3=-DBOOST_NO_CXX98_FUNCTION_BASE
AVOID_HASH_HPP_WARNS=$(AVOID_HASH_HPP_WARNS.$(HOW))
USE.RULE_DEFN?=U
INC.RULE_DEFN.D=-I$(repls)/rule_defn
INC.RULE_DEFN.U=
INC.RULE_DEFN=$(INC.RULE_DEFN.$(USE.RULE_DEFN))
USE.DEBUG?=D
INC.DEBUG.D=-I$(repls)/debug
INC.DEBUG.U=
INC.DEBUG=$(INC.DEBUG.$(USE.DEBUG))
INC.DWNLD_SELECT.D=-I$(repls)/dwnld-select
INC.DWNLD_SELECT.U=
USE.DWNLD_SELECT=U
INC.DWNLD_SELECT=$(INC.DWNLD_SELECT.$(USE.DWNLD_SELECT))
INC.MAKE_TRANSFORM_PARSER.D=-I$(adds)/make_transform_parser
INC.MAKE_TRANSFORM_PARSER.U=
INC.MAKE_TRANSFORM_PARSER=$(INC.MAKE_TRANSFORM_PARSER.D)
INC.common.D=-I$(repls)/common
INC.common.U=
INC.common=$(INC.common.D)
USE.UNFOLD_LEFT=U
INC.UNFOLD_LEFT.D=-I$(repls)/unfold_left
INC.UNFOLD_LEFT.U=
INC.UNFOLD_LEFT=$(INC.UNFOLD_LEFT.$(USE.UNFOLD_LEFT))
ifeq ($(USE.UNFOLD_LEFT),D)
  USE.PARTITION_PACK_ATTRIBUTE?=D
else
  USE.PARTITION_PACK_ATTRIBUTE=U
endif
INC.PARTITION_PACK_ATTRIBUTE.D=-I$(repls)/part_pack_attr
INC.PARTITION_PACK_ATTRIBUTE.U=
INC.PARTITION_PACK_ATTRIBUTE=$(INC.PARTITION_PACK_ATTRIBUTE.$(USE.PARTITION_PACK_ATTRIBUTE))
USE.GET_INFO_OSTREAM?=U
INC.GET_INFO_OSTREAM.D=-I$(repls)/get_info_ostream
INC.GET_INFO_OSTREAM.U=
INC.GET_INFO_OSTREAM=$(INC.GET_INFO_OSTREAM.$(USE.GET_INFO_OSTREAM))
INC.BOOST_ADDITIONS.D=-I$(adds)
INC.BOOST_ADDITIONS.U=
INC.BOOST_ADDITIONS=$(INC.BOOST_ADDITIONS.D)
USE.STD_VARIANT=U
DEF.USE_DEBUG=-$(USE.DEBUG)USE_DEBUG
DEF.USE_PARSE_RULE_HPP=-DUSE_PARSE_RULE_HPP
DEF.USE_RULE_TRANSFORM_ATTRIBUTE=-DUSE_RULE_TRANSFORM_ATTRIBUTE
DEF.USE_STD_VARIANT=-$(USE.STD_VARIANT)USE_STD_VARIANT
DEF.USE_SEMANTIC_ACTIONS=-DUSE_SEMANTIC_ACTIONS
DEF.USE_UNFOLD_LEFT=-$(USE.UNFOLD_LEFT)USE_UNFOLD_LEFT
DEF.USE_RULE_DEFN=-$(USE.RULE_DEFN)USE_RULE_DEFN
DEF.USE_COLLAPSE_ATOF=-DUSE_COLLAPSE_ATOF
DEF.NO_CHK_SEQ_ATTR_SIZ=-UNO_CHK_SEQ_ATTR_SIZ
DEFINES:=\
  $(DEF.NO_CHK_SEQ_ATTR_SIZ)\
  $(DEF.USE_SEMANTIC_ACTIONS)\
  $(DEF.USE_RULE_DEFN)\
  $(DEF.USE_PARSE_RULE_HPP)\
  $(DEF.USE_RULE_TRANSFORM_ATTRIBUTE)\
  $(DEF.USE_UNFOLD_LEFT)\
  $(DEF.USE_COLLAPSE_ATOF)\
  $(DEF.USE_STD_VARIANT)\
  $(DEF.USE_SEMANTIC_ACTIONS)\
###
FLAGS_AS_PATH..space=\
  $(DEF.NO_CHK_SEQ_ATTR_SIZ)\
  $(DEF.USE_DEBUG)\
  $(DEF.USE_RULE_DEFN)\
  $(DEF.USE_UNFOLD_LEFT)\
###
FLAGS_AS_PATH=$(call join-with,.,$(FLAGS_AS_PATH..space))

#ONLY.download="yes"
ifdef ONLY.download
  DEFINES:=\
    $(AVOID_HASH_HPP_WARNS)\
  ###
  INCS:=\
    -I$(boost.root)\
    $(INCS)\
  ###
else
  INCS:=\
    $(INC.UNFOLD_LEFT)\
    $(INC.PARTITION_PACK_ATTRIBUTE)\
    $(INC.BOOST_ADDITIONS)\
    $(INC.MAKE_TRANSFORM_PARSER)\
    $(INC.common)\
    -I$(lexertl14.github)\
    $(INC.RULE_DEFN)\
    $(INC.GET_INFO_OSTREAM)\
    $(INC.DEBUG)\
    -I$(boost.root)\
    $(INCS)\
  ###
endif

show:
	@echo "boost.root=$(boost.root)"

